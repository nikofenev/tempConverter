package com.tempCorvesion;import org.junit.Test;import java.math.BigDecimal;import static org.junit.Assert.*;public class TemperatureConversionsTest {    @Test    public void getTemperatureConversionsSoap12FtoC() throws Exception {        TemperatureConversionsSoapType service = new TemperatureConversions().getTemperatureConversionsSoap12();        BigDecimal fahrenheitToCelsius = service.fahrenheitToCelsius(BigDecimal.valueOf(32.0));        assertEquals("The conversion failed", BigDecimal.valueOf(0),fahrenheitToCelsius);    }    @Test    public void getTemperatureConversionsSoap12CtoF() {        TemperatureConversionsSoapType service = new TemperatureConversions().getTemperatureConversionsSoap12();        BigDecimal celsiusToFahrenheit = service.celsiusToFahrenheit(BigDecimal.valueOf(0.00));        assertEquals("The conversion failed", BigDecimal.valueOf(32),celsiusToFahrenheit);    }    @Test    public void getTemperatureConversionSoap12WindChillC() {        TemperatureConversionsSoapType service = new TemperatureConversions().getTemperatureConversionsSoap12();        BigDecimal windChillInCelsius = service.windChillInCelsius(BigDecimal.valueOf(20),BigDecimal.valueOf(20));        assertEquals("The conversion failed", BigDecimal.valueOf(10.13),windChillInCelsius);    }    @Test    public void getTemperatureConversionSoap12WindChillF() {        TemperatureConversionsSoapType service = new TemperatureConversions().getTemperatureConversionsSoap12();        BigDecimal windChillInFahrenheit = service.windChillInFahrenheit(BigDecimal.valueOf(80),BigDecimal.valueOf(10));        assertEquals("The conversion failed", BigDecimal.valueOf(71.77399988),windChillInFahrenheit);    }}